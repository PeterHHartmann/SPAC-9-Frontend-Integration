services:
  postgres:
    image: postgres:latest
    ports:
      - 5432:5432
    env_file:
      - .env.${APP_ENV:-dev}
    environment:
      - POSTGRES_DB=exampledb
    networks:
      - postgres-network
    volumes:
      - postgres-data:/var/lib/postgresql/data/
      # - ./data/init.sql:/docker-entrypoint-initdb.d/init.sql # SQL script for seeding postgres with data
    healthcheck:
      test: 
        - CMD-SHELL
        - pg_isready -h postgres
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 15s

  api:
    build:
      context: .
      dockerfile: Dockerfile-api
    ports:
      - 50051:50051
    volumes:
      - ./api:/app
      - .env.${APP_ENV:-dev}:/.env.${APP_ENV:-dev}
    networks:
      - postgres-network
      - api-network
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
    healthcheck:
      test: ["CMD-SHELL", "grpcurl -plaintext -d {} localhost:50051 quotes.QuoteService.GetQuotes"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  envoy:
    build:
      context: .
      dockerfile: Dockerfile-envoy
    ports:
      - 8000:8000
    volumes:
      - ./envoy.yaml:/etc/envoy/envoy.yaml
    networks:
      - api-network
    depends_on:
      api:
        condition: service_healthy
        restart: true

  client:
    build:
      context: .
      dockerfile: Dockerfile-client
    ports:
      - 5173:5173
    volumes:
      - ./client:/usr/src/client
    networks:
      - api-network
    depends_on:
      - envoy

networks:
  postgres-network:
    driver: bridge
  api-network:
    driver: bridge

volumes:
  postgres-data:
