# https://taskfile.dev

version: '3'

tasks:
  get:
    cmds:
      - go get {{.package}}
    desc: Install go package
    vars:
      PACKAGE: "{{.package}}"
    requires:
      vars:
        - package

  run:
    cmds:
      - go run .
    desc: Start the api server

  tidy:
    cmds:
      - go mod tidy
    desc: Tidy up api project

  ent:new:
    cmds:
      - go run -mod=mod entgo.io/ent/cmd/ent new {{.name}}
    vars:
      NAME: "{{.name}}"
    desc: Generate a new entgo model
    requires:
      vars: [name]

  ent:gen:
    cmds:
      - go generate ./ent
    desc: Generate database models based on ent schema
    generates:
      - api/db/ent/*.go

  ent:migrate:create:
    dotenv: ["../.env.example"]
    cmds:
      - atlas migrate diff {{.CLI_ARGS}} --dir "{{.DIR}}" --to "{{.TO}}" --dev-url "{{.DEV_URL}}"
    vars:
      DIR: "file://ent/migrate/migrations"
      TO: "ent://ent/schema"
      DEV_URL: "docker://postgres/15/test?search_path=public"

    desc: Create database migration
  
  ent:migrate:apply:
    dotenv: ["../.env.example"]
    cmds:
      - echo "postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST:$POSTGRES_PORT/$POSTGRES_DB?search_path=public&sslmode=disable"
      - atlas migrate apply --dir "{{.DIR}}" --url "{{.URL}}"
    vars:
      DIR: "file://ent/migrate/migrations"
      URL: postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST:$POSTGRES_PORT/$POSTGRES_DB?search_path=public&sslmode=disable
  
  ent:migrate:status:
    dotenv: ["../.env.example"]
    cmds:
      - atlas migrate status --dir "{{.DIR}}" -u "{{.URL}}"
    vars:
      DIR: "file://ent/migrate/migrations"
      URL: postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@$POSTGRES_HOST:$POSTGRES_PORT/$POSTGRES_DB?search_path=public&sslmode=disable
  
  ent:migrate:lint:
    dotenv: ["../.env.example"]
    cmds:
      - atlas migrate lint --dir "{{.DIR}}" --dev-url "{{.DEV_URL}}" --latest 1
    vars:
      DIR: "file://ent/migrate/migrations"
      DEV_URL: "docker://postgres/15/test?search_path=public"